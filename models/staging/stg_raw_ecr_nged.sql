-- models/staging/stg_raw_ecr_nged.sql

with source as (
    select *
    from {{ source('raw_ecr_nged_source', 'raw_ecr_nged') }}
)

select
    {{ clean_value('"exportmpanmsid"') }} as export_mpan,
    {{ clean_value('"importmpanmsid"') }} as import_mpan,
    {{ clean_value('"customername"') }} as customer_name,
    {{ clean_value('"customersite"') }} as customer_site,
    {{ clean_value('"addressline"') }} as address_line_1,
    {{ clean_value('"addressline2"') }} as address_line_2,
    {{ clean_value('"TownCity"') }} as town_city,
    {{ clean_value('"county"') }} as county,
    {{ clean_value('"postcode"') }} as postcode,
    {{ clean_value('"country"') }} as country,
    "location_x_eastings" as x_coordinate,
    "location_Y_northings" as y_coordinate,
    -- Create geopoint in EPSG:27700 (British National Grid)
    ST_SetSRID(ST_MakePoint("location_x_eastings"::float, "location_Y_northings"::float), 27700) as geopoint,
    {{ clean_value('"gridsupplypoint"') }} as grid_supply_point,
    {{ clean_value('"bulksupplypoint"') }} as bulk_supply_point,
    {{ clean_value('"primary"') }} as primary_boundary,
    {{ clean_value('"poc_voltage_kv"') }} as poc_voltage_kv,
    {{ clean_value('"licencearea"') }} as licence_area,
    {{ convert_to_text(clean_value('"energysource"')) }} as energy_source_1,
    {{ clean_value('"tech_1"') }} as energy_tech_1,
    {{ clean_value('"chpcogenerationyesno"') }} as chp_cogen_1_yes_no,
    {{ clean_value('"storagecapacitymwh"') }} as sto_capacity_1_mwh,
    {{ clean_value('"storagedurationhours"') }} as sto_duration_1_hours,
    "sourcetech_1" as registered_cap_1,
    {{ convert_to_text(clean_value('"energysource2"')) }} as energy_source_2,
    {{ clean_value('"tech_2"') }} as energy_tech_2,
    {{ clean_value('"chpcogeneration2yesno"') }} as chp_cogen_2_yes_no,
    {{ clean_value('"storagecapacity2mwh"') }} as sto_capacity_2_mwh,
    {{ clean_value('"storageduration2hours"') }} as sto_duration_2_hours,
    "sourcetech_2" as energy_source_2_cap,
    {{ convert_to_text(clean_value('"energysource3"')) }} as energy_source_3,
    {{ clean_value('"tech_3"') }} as energy_tech_3,
    {{ clean_value('"chpcogeneration3yesno"') }} as chp_cogen_3_yes_no,
    {{ clean_value('"storagecapacity3mwh"') }} as sto_capacity_3_mwh,
    {{ clean_value('"storageduration3hours"') }} as sto_duration_3_hours,
    "sourcetech_3" as energy_source_3_cap,
    {{ clean_value('"flexibleconnectionYesNo"') }} as flexible_connection_yes_no,
    {{ clean_value('"connectionstatus"') }} as connection_status,
    "connected_reg_cap_mw" as already_connected_cap_mw,
    "connectedmaximumexportcapacitymw" as maximum_export_cap_mw,
    "connectedmaximumexportcapacitymva" as maximum_export_cap_mva,
    "connectedmaximumimportcapacitymw" as maximum_import_cap_mw,
    "connectedmaximumimportcapacitymva" as maximum_import_cap_mva,
    {{ convert_to_datetime(clean_value('"dateconnected"')) }} as date_connected,
    "accepted_reg_cap_mw" as accepted_to_connect_cap_mw,
    {{ clean_value('"accepted_max_export_cap_mw"') }} as change_to_max_export_cap_mw,
    {{ clean_value('"accepted_max_export_cap_mva"') }} as change_to_max_export_cap_mva,
    {{ clean_value('"accepted_max_import_cap_mw"') }} as change_to_max_import_cap_mw,
    {{ clean_value('"accepted_max_import_cap_mva"') }} as change_to_max_import_cap_mva,
    {{ convert_to_datetime(clean_value('"dateaccepted"')) }} as date_accepted,
    {{ clean_value('"targetenergisationdate"') }} as target_energisation_date,
    {{ clean_value('"distributionserviceprovideryn"') }} as dno_provider_yes_no,
    {{ clean_value('"transmissionserviceprovideryn"') }} as tso_provider_yes_no,
    {{ clean_value('"reference"') }} as reference,
    {{ clean_value('"inaconnectionqueueyn"') }} as in_queue_yes_no,
    {{ clean_value('"distributionreinforcementreference"') }} as distribution_reinforcement_reference,
    {{ clean_value('"transmissionreinforcementreference"') }} as transmission_reinforcement_reference,
    {{ convert_to_datetime(clean_value('"lastupdated"')) }} as last_updated

from source
